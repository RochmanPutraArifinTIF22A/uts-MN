Nama : Rochman Putra Arifin 
Nim : 23422028 
Kelas: TIF22A

Soal

1. Persamaan Non Linier 3 + x^3 - x = 4

2. Persamaan Linier 2x - 4 = 8

Jawaban

#NO 1
#Metode Biseksi
def f(x):
    return x**3 - x - 1

def bisection(a, b, tol, max_iter):
    iterasi = 1

    print("Iterasi |   a\t\t|   b\t\t|   c\t\t|   f(c)")
    print("-" * 50)

    while iterasi <= max_iter:
        c = (a + b) / 2
        fc = f(c)
        print("{:7} | {:10.6f} | {:10.6f} | {:10.6f} | {:10.6f}".format(iterasi, a, b, c, fc))

        if fc == 0 or (b - a) / 2 < tol:
            return c

        iterasi = iterasi + 1

        if f(c) * f(a) < 0:
            b = c
        else:
            a = c

    return None  # Jika iterasi melebihi batas maksimum

# Tentukan nilai awal, toleransi, dan iterasi maksimum
a_biseksi = 0
b_biseksi = 2
toleransi_biseksi = 1e-6
iterasi_maksimum_biseksi = 1000

# Panggil fungsi bisection
solusi_biseksi = bisection(a_biseksi, b_biseksi, toleransi_biseksi, iterasi_maksimum_biseksi)

if solusi_biseksi is not None:
    print("\nSolusi Metode Biseksi: {:.6f}".format(solusi_biseksi))
else:
    print("\nMetode Biseksi tidak konvergen.")

#OUTPUT

Iterasi |   a		|   b		|   c		|   f(c)
--------------------------------------------------
      1 |   0.000000 |   2.000000 |   1.000000 |  -1.000000
      2 |   1.000000 |   2.000000 |   1.500000 |   0.875000
      3 |   1.000000 |   1.500000 |   1.250000 |  -0.296875
      4 |   1.250000 |   1.500000 |   1.375000 |   0.224609
      5 |   1.250000 |   1.375000 |   1.312500 |  -0.051514
      6 |   1.312500 |   1.375000 |   1.343750 |   0.082611
      7 |   1.312500 |   1.343750 |   1.328125 |   0.014576
      8 |   1.312500 |   1.328125 |   1.320312 |  -0.018711
      9 |   1.320312 |   1.328125 |   1.324219 |  -0.002128
     10 |   1.324219 |   1.328125 |   1.326172 |   0.006209
     11 |   1.324219 |   1.326172 |   1.325195 |   0.002037
     12 |   1.324219 |   1.325195 |   1.324707 |  -0.000047
     13 |   1.324707 |   1.325195 |   1.324951 |   0.000995
     14 |   1.324707 |   1.324951 |   1.324829 |   0.000474
     15 |   1.324707 |   1.324829 |   1.324768 |   0.000214
     16 |   1.324707 |   1.324768 |   1.324738 |   0.000084
     17 |   1.324707 |   1.324738 |   1.324722 |   0.000018
     18 |   1.324707 |   1.324722 |   1.324715 |  -0.000014
     19 |   1.324715 |   1.324722 |   1.324718 |   0.000002
     20 |   1.324715 |   1.324718 |   1.324717 |  -0.000006
     21 |   1.324717 |   1.324718 |   1.324718 |  -0.000002

Solusi Metode Biseksi: 1.324718

-------------------------------------------------------------------------------------------------

#NO 2
#Metode Biseksi
def f(x):
    return 2*x - 12

def bisection(a, b, tol, max_iter):
    iterasi = 1

    print("Iterasi |   a\t\t|   b\t\t|   c\t\t|   f(c)")
    print("-" * 45)

    while iterasi <= max_iter:
        c = (a + b) / 2
        fc = f(c)
        print("{:7} | {:10.6f} | {:10.6f} | {:10.6f} | {:10.6f}".format(iterasi, a, b, c, fc))

        if fc == 0 or (b - a) / 2 < tol:
            return c

        iterasi = iterasi + 1

        if f(c) * f(a) < 0:
            b = c
        else:
            a = c

    return None  # Jika iterasi melebihi batas maksimum

# Tentukan nilai awal, toleransi, dan iterasi maksimum
a_biseksi = 0
b_biseksi = 10
toleransi_biseksi = 1e-6
iterasi_maksimum_biseksi = 1000

# Panggil fungsi bisection
solusi_biseksi = bisection(a_biseksi, b_biseksi, toleransi_biseksi, iterasi_maksimum_biseksi)

if solusi_biseksi is not None:
    print("\nSolusi Metode Biseksi: {:.6f}".format(solusi_biseksi))
else:
    print("\nMetode Biseksi tidak konvergen.")

#OUTPUT

Iterasi |   a		|   b		|   c		|   f(c)
---------------------------------------------
      1 |   0.000000 |  10.000000 |   5.000000 |  -2.000000
      2 |   5.000000 |  10.000000 |   7.500000 |   3.000000
      3 |   5.000000 |   7.500000 |   6.250000 |   0.500000
      4 |   5.000000 |   6.250000 |   5.625000 |  -0.750000
      5 |   5.625000 |   6.250000 |   5.937500 |  -0.125000
      6 |   5.937500 |   6.250000 |   6.093750 |   0.187500
      7 |   5.937500 |   6.093750 |   6.015625 |   0.031250
      8 |   5.937500 |   6.015625 |   5.976562 |  -0.046875
      9 |   5.976562 |   6.015625 |   5.996094 |  -0.007812
     10 |   5.996094 |   6.015625 |   6.005859 |   0.011719
     11 |   5.996094 |   6.005859 |   6.000977 |   0.001953
     12 |   5.996094 |   6.000977 |   5.998535 |  -0.002930
     13 |   5.998535 |   6.000977 |   5.999756 |  -0.000488
     14 |   5.999756 |   6.000977 |   6.000366 |   0.000732
     15 |   5.999756 |   6.000366 |   6.000061 |   0.000122
     16 |   5.999756 |   6.000061 |   5.999908 |  -0.000183
     17 |   5.999908 |   6.000061 |   5.999985 |  -0.000031
     18 |   5.999985 |   6.000061 |   6.000023 |   0.000046
     19 |   5.999985 |   6.000023 |   6.000004 |   0.000008
     20 |   5.999985 |   6.000004 |   5.999994 |  -0.000011
     21 |   5.999994 |   6.000004 |   5.999999 |  -0.000002
     22 |   5.999999 |   6.000004 |   6.000001 |   0.000003
     23 |   5.999999 |   6.000001 |   6.000000 |   0.000000
     24 |   5.999999 |   6.000000 |   6.000000 |  -0.000001

Solusi Metode Biseksi: 6.000000
